#FROM dustynv/ros:foxy-ros-base-l4t-r35.4.1
FROM secretxs/foxy-pytorch-l4t-r35.2.1:v1.0

# crutches: not necessary, but...
RUN rm -rf /ros_deep_learning
RUN rm -rf /jetson-inference
RUN rm ros_entrypoint.sh

# 
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
RUN apt update -y

RUN apt install -y \
    ros-foxy-ros2bag \
    ros-foxy-rosbag2 \
    ros-foxy-ros1-bridge \
    ros-foxy-rosbag2-bag-v2-plugins \
    ros-foxy-rosbag2-converter-default-plugins \
    ros-foxy-rmw-cyclonedds-cpp

# ultralytics
# Downloads to user config dir
ADD https://ultralytics.com/assets/Arial.ttf https://ultralytics.com/assets/Arial.Unicode.ttf /root/.config/Ultralytics/

# Install linux packages
# g++ required to build 'tflite_support' and 'lap' packages, libusb-1.0-0 required for 'tflite_support' package
RUN apt update \
    && apt install --no-install-recommends -y gcc git zip curl htop libgl1 libglib2.0-0 libpython3-dev gnupg g++ libusb-1.0-0

# Create working directory
WORKDIR /usr/src/ultralytics

# Copy contents
# COPY . /usr/src/ultralytics  # git permission issues inside container
RUN git clone https://github.com/ultralytics/ultralytics -b main /usr/src/ultralytics
ADD https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n.pt /usr/src/ultralytics/

# Remove opencv-python from requirements.txt as it conflicts with opencv-python installed in base image
RUN grep -v '^opencv-python' requirements.txt > tmp.txt && mv tmp.txt requirements.txt

# Install pip packages manually for TensorRT compatibility https://github.com/NVIDIA/TensorRT/issues/2567
RUN python3 -m pip install --upgrade pip wheel
RUN pip install --no-cache tqdm matplotlib pyyaml psutil pandas onnx "numpy==1.23"
RUN pip install --no-cache -e .

# add user and his password
ARG USER=docker_yolov8_seg
ARG UID=1000
ARG GID=1000
# default password
ARG PW=user

ENV PYTHONPATH=/home/${USER}/colcon_ws/src/yolov8_seg:${PYTHONPATH}

RUN useradd -m -o ${USER} --uid=${UID} && echo "${USER}:${PW}" | chpasswd && adduser ${USER} sudo
WORKDIR /home/${USER}
RUN mkdir -p colcon_ws/src && chown -R ${UID}:${GID} /home/${USER}
USER ${UID}:${GID}